- name: Ensure directory exists
  file: path={{ item }} state=directory owner=easemob group=easemob
  with_items:
    - /data/apps/log/msync/
    - /data/apps/var/msync/
    - /data/apps/opt/msync/

- name: set cluster
  set_fact: cluster_name={{nodenum.split(',')[0]}}

- name: Ensure machinbasicid
  set_fact: machineid={{nodenum.split(',')[1]|int + 100 }}
  when: cluster_name == 'ebs'

- name: Ensure machinbasicid
  set_fact: machineid={{nodenum.split(',')[1]|int + 100 }}
  when: cluster_name == 'vip6'


- name: update msync
  #synchronize: src=/data/update_msync/msync dest=/data/apps/opt/ copy_links=yes delete=no recursive=yes rsync_opts="-avz --exclude *.mc --exclude *.out --exclude *.log --exclude *.log.*"
  synchronize: src=/data/update_msync/ci/{{ msync_version}}/msync dest=/data/apps/opt/ copy_links=yes delete=no recursive=yes rsync_opts="-avz --exclude *.mc --exclude *.out --exclude *.log --exclude *.log.*"


- name: Ensure directory permission right
  file: path=/data/apps/opt/msync state=directory owner=easemob group=easemob recurse=yes

- name: fix msync RUNNER_USER issue
  lineinfile: dest=/data/apps/opt/msync/bin/msync regexp='^RUNNER_USER=$' line='RUNNER_USER=easemob'
  tags:
    - fix_runner_user

#- name: msync version
#  shell: ls -Ft /data/apps/opt/msync/releases/ |grep '/$'|head -n 1 | cut -d'/' -f1
#  register: msync_version

- name: Put on the msync files
  template: src={{item.src}} dest={{item.dest}} owner=easemob group=easemob mode={{item.mode}}
  with_items:
  - { src: "/data/github_ci/easemob-ops/ops-repo/roles/applications/msync/templates/app.config_{{ cluster_name }}", dest: "/data/apps/opt/msync/etc/app.config.{{ msync_version }}", mode: 750 }
  - { src: "/data/github_ci/easemob-ops/ops-repo/roles/applications/msync/templates/app.config_{{ cluster_name }}", dest: "/data/apps/opt/msync/releases/{{ msync_version }}/sys.config", mode: 750 }


- name: put vm.args msync.mc
  copy: src={{item.src}} dest={{item.dest}} owner=easemob group=easemob mode={{item.mode}}
  with_items:
  - { src: "vm.args.{{ cluster_name}}", dest: "/data/apps/opt/msync/etc/vm.args", mode: 750 }
  - { src: "msync.mc", dest: "/data/apps/config/monit/msync.mc", mode: 750 }

- name: restart with monit
  service: name=monit state=restarted 
