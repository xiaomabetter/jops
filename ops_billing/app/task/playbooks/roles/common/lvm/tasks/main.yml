---
- name: Ensure pv path
  set_fact: disk='vdb'
  when: "'vdb' in disklist"

- name: Ensure pv path
  set_fact: disk='xvdb'
  when: "'xvdb' in disklist"
  
- name: Install the LVM2 packages
  yum: name={{ item }} state=installed
  with_items: lvm_pkgs

- name: Create VG
  lvg: vg={{vg}} pvs=/dev/{{disk}} pesize=32 state=present vg_options=--force
  when: "'data-apps' not in ansible_devices[disk]['holders']"
  tags:
    - create_vg

- name: Create LV
  lvol: vg={{vg}} lv={{lv}} size=100%FREE
  when: "'data-apps' not in ansible_devices[disk]['holders']"
  tags:
    - create_lv

- name: Create the ext4 filesystem on lv
  filesystem: fstype=ext4 dev=/dev/{{vg}}/{{lv}}
  when: "'data-apps' not in ansible_devices[disk]['holders']"

- name: Create the mount point directory
  file: path={{mount_point}} state=directory
  when: "'data-apps' not in ansible_devices[disk]['holders']"

- name: Add the mount entry in /etc/fstab
  mount: name={{mount_point}} src=/dev/{{vg}}/{{lv}} state=mounted opts=defaults fstype=ext4
  when: "'data-apps' not in ansible_devices[disk]['holders']"

- name: Create the mount point directory
  file: path={{mount_point}} state=directory
  when: "'data-apps' not in ansible_devices[disk]['holders']"

- name: Add the mount entry in /etc/fstab
  mount: name={{mount_point}} src=/dev/{{vg}}/{{lv}} state=mounted opts=defaults fstype=ext4
  when: "'data-apps' not in ansible_devices[disk]['holders']"

- name: Ensure directory exists
  file: path={{ item }} state=directory owner=easemob group=easemob
  with_items:
    - /data/apps
    - /data/apps/config
    - /data/apps/opt
    - /data/apps/data
    - /data/apps/config
    - /data/apps/log
    - /data/apps/var

