=== Ejabberd

==== 概况

环信系统核心的 IM 功能由 Ejabberd 提供。
用户客户端与 Ejabberd 建立长连接，由 Ejabberd 提供消息转发、群组、好友关系等功能。

===== 外部入口

Ejabberd 主要服务端口为 5222（XMPP 协议）和 5280（HTTP 协议）。

===== 存储节点和连接节点

环信系统中，保存用户 session/群组/好友关系的表数据比较大，同步压力大。
因此将这些表制定到特定的节点上存储，这些节点不再承担外部连接，角色就成为`存储节点`。
其它节点不再保存这些表，只保留一些容量比较小的表，角色成为`连接节点`

===== 消息

用户消息通过 XMPP 协议发送，由 ejabberd 转发给接收者。

APP 开发者可以通过 usergrid-rest 发送消息，由 ejabberd 转发给接收者。

如果接收方状态为不在线，会将消息保存到离线消息库（RDS）中，并在接收方用户登录时推送。

Ejabberd 处理消息后，会转发一份消息到 Redis 队列中，供 usergrid-tools 处理（保存到 Cassandra，iOS 设备的 APNS 推送）。

===== 结构图

[ditaa,ejabberd-architecture,png]
----
       +-------------+
       |usergrid-rest|
       +-------------+
            |
            |Redis
            |
            v
         +-----------+      +---------+
5222<--->|           |      |         |
         |  Ejabberd |------|Ejabberd |
5280<--->|[role:conn]|      |[role:db]|
         +-----------+      +---------+
            |
            |Redis
            |       +--------------+       +----+
            +------>|usergrid-tools|------>|APNS|
                    +--------------+       +----+
----

==== 安装

环信 Ejabberd 约定的安装目录为 `/data/apps/opt/ejabberd/`。

===== 配置文件

[source]
./data/apps/opt/ejabberd/etc/ejabberd/ejabberdctl.cfg
----
ERL_MAX_PORTS=3200000
INET_DIST_INTERFACE=10.252.211.129
ERL_PROCESSES=2500000
ERL_MAX_ETS_TABLES=20000
ERLANG_NODE=ejabberd@sdb-ali-hangzhou-ejabberd1
EJABBERD_PID_PATH=/home/easemob/apps/var/ejabberd/ejabberd.pid
EJABBERD_BYPASS_WARNINGS=true
EJABBERD_LOG_TYPE=file
ERL_OPTIONS="+zdbbl 2096000"
----

`/data/apps/opt/ejabberd/etc/ejabberd/ejabberd.yml`

==== 基本操作命令

===== 启动
----
sudo monit start ejabberd
----

===== 停止
----
sudo monit stop ejabberd
----

===== 重启
----
sudo monit stop ejabberd

sudo monit start ejabberd
----

CAUTION: 重启时，进程停止与进程启动之间要留有足够的间隔，一般是5分钟。
这是由于 ejabberd 集群繁忙时，需要预留足够的时间，以便集群中系统状态完成同步。

===== debug 操作

[source,console]
----
ejabberdctl debug
----

连续按两次 `Ctrl C` 退出 debug console

TIP: 大部分 ejabberd 操作在 debug console 中进行。一些常用操作使用 expect 包装后，可以直接在 shell 或其它脚本直接调用。

检查 mnesia 状态

[source,console]
----
mnesia:info().
----

检查进程队列

[source,console]
----
c("/opt/ejabberd/monitor.erl"), monitor:longest_mq().
----

==== 集群初始化

初次安装 ejabberd 程序启动时，每个ejabberd 节点组成独立的单节点集群。
为了实现规模扩展，需要对集群初始化。

===== 同步 cookie

集群中所有节点的 cookie 文件内容确保一致，否则无法互相通信。
文件名为： `/data/apps/opt/ejabberd/var/lib/ejabberd/.erlang.cookie`


===== 节点加入集群

在任意节点 debug console 中执行以下命令，可以将该节点加入集群。

[source,console]
----
ExtraNode = 'ejabberd@sdb-ali-hangzhou-ejabberd1'.

mnesia:stop(),mnesia:delete_schema([node()]),mnesia:start(),mnesia:change_config(extra_db_nodes, [ExtraNode]),mnesia:change_table_copy_type(schema, node(), disc_copies),application:stop(ejabberd).

application:start(ejabberd).
----

TIP: `ExtraNode` 需要指定为存储节点。

===== mnesia 表 copies 分布调整

====== 存储节点操作

[source,console]
----
lists:foreach(fun(T) -> mnesia:add_table_copy(T, node(), ram_copies), mnesia:change_table_copy_type(T, node(), disc_copies) end, [app_config, privacy,muc_registered,muc_room, roster,roster_version]).

lists:foreach(fun(T) -> mnesia:add_table_copy(T, node(), disc_copies) end, [last_activity,pubsub_index,vcard_search,motd_users,sr_user,motd,sr_group,pubsub_state,passwd,pubsub_node]).

lists:foreach(fun(T) -> mnesia:add_table_copy(T, node(), ram_copies), mnesia:change_table_copy_type(T, node(), disc_only_copies) end,[offline_msg,private_storage,pubsub_item,vcard]).

ejabberd_sm:st_join().
----

====== 连接节点操作

调整 session 表读取：

预备操作
[source,console]
----
ST = fun(N) -> list_to_atom("session_frag" ++ integer_to_list(N)) end.

Node = fun(NN) -> list_to_atom("ejabberd@sdb-ali-hangzhou-ejabberd"++integer_to_list(NN)) end.
----

查询
[source,console]
----
mnesia:table_info(session, where_to_read).

[mnesia:table_info(ST(N), where_to_read) || N <- lists:seq(2,32)].
----

修改
[source,console]
----
mnesia_lib:set_remote_where_to_read(session, [Node(NN) || NN <- lists:seq(1,10) -- [1]]).

[mnesia_lib:set_remote_where_to_read(ST(N), [Node(NN) || NN <- lists:seq(1,10) -- [1]]) || N <- lists:seq(2,32)].
----

==== 日志与监控

日志目录为 `/data/apps/opt/ejabberd/var/log/ejabberd/`

==== 配置与优化
